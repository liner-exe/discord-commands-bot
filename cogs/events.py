import nextcord
from nextcord import utils, User
from nextcord.ext import commands
from nextcord.ext.commands import errors
import random
from random import choice


intents = nextcord.Intents.all()

client = nextcord.Client(intents=intents)


class Events(commands.Cog):
	def __init__(self, client):
		self.client = client

	@commands.Cog.listener()
	async def on_message(self, message):
		print("{0.guild} - {0.author}: {0.content}".format(message))

	@commands.Cog.listener()
	async def on_command_error(self, ctx, err: Exception):
		if isinstance(err, errors.NotOwner):
			pass

		elif isinstance(err, errors.CommandNotFound):
			await ctx.send("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
			print(f"–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ - {ctx.message.author}: {ctx.message.content}")

		elif isinstance(err, errors.MissingPermissions):
			await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")

	@commands.Cog.listener()
	async def on_message(self, message):
		if message.author.bot:
			return
		elif message.author == client.user:
			return
		else:
			msg = message.content.lower()
		
			if msg.startswith("–ø—Ä–∏–≤–µ—Ç"):
				await message.channel.send(f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.author.mention}, —á–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?')

			if msg.startswith("–ø–æ–∫–∞"):
				await message.channel.send(f'–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á, {message.author.mention}, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞!')

			if msg.startswith('–±–æ—Ç –∏–Ω—Ñ–∞'):
				infa_perc = random.randint(0, 100)
				emb1 = nextcord.Embed(
					description=f'{message.author.mention}, –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {infa_perc}%',
					colour=0x00ffaa
					)
				await message.channel.send(embed=emb1)

			if msg.startswith('–±–æ—Ç –∫—Ç–æ'):
				answers = ["–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —ç—Ç–æ", "—è –¥—É–º–∞—é, —ç—Ç–æ", "—è –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é, —ç—Ç–æ", "–ø–æ –º–æ–µ–º—É –º–Ω–µ–Ω–∏—é, —ç—Ç–æ"]
				result = random.choice(answers)
				emb1 = nextcord.Embed(
					description=f'{message.author.mention}, {result} {choice(message.guild.members).mention}!',
					colour=0x00ffaa
					)
				await message.channel.send(embed=emb1)

			if msg.startswith('–±–æ—Ç —à–∏–ø'):
				answers = ["–≤–∞—à–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å", "–≤—ã –ø–æ–¥—Ö–æ–¥–∏—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É –Ω–∞"]
				an = random.choice(answers)
				ship = random.randint(0, 100)
				embed = nextcord.Embed(
					description=f'{message.author.mention}, {an} {ship}%!',
					colour=0x00ffaa
					)
				await message.channel.send(embed=embed)
				

			if msg.startswith('–±–æ—Ç —à–∞–Ω—Å'):
				arr = ["–±–µ—Å—Å–ø–æ—Ä–Ω–æ", "–ø—Ä–µ–¥—Ä–µ—à–µ–Ω–æ", "–Ω–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π", "–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞", 
				"–º–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º", "–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - –¥–∞", "–≤–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ", "—Ö–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã",
				"–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - –¥–∞", "–¥–∞", "–ø–æ–∫–∞ –Ω–µ —è—Å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞", "—Å–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ",
				"–ª—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å", "—Å–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å", "—Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –∏ —Å–ø—Ä–æ—Å–∏ –æ–ø—è—Ç—å",
				"–¥–∞–∂–µ –Ω–µ –¥—É–º–∞–π", "–º–æ–π –æ—Ç–≤–µ—Ç - –Ω–µ—Ç", "–ø–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º - –Ω–µ—Ç", "–ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ",
				"–≤–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ"]
				ball = random.choice(arr)
				emb1 = nextcord.Embed(
					description=f'{message.author.mention}, üé± {ball}!',
					colour=0xffffff
					)
				await message.channel.send(embed=emb1)


	# @commands.Cog.listener()
	# async def on_member_join(self, member):
	# 	guild = client.get_guild(guild_id)
	# 	channel = guild.get_channel(channel_id)
	# 	role = nextcord.utils.get(member.guild.roles, id=role_id)
	# 	await member.add_roles(role)
	# 	await channel.send(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä {guild.name}, {member.mention}!')
	# 	await member.send(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä {guild.name}, {member.mention}! O–∑–Ω–∞–∫–æ–º—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏.')
	#
	# @commands.Cog.listener()
	# async def on_member_remove(self, member):
	# 	guild = client.get_guild(guild_id)
	# 	channel = guild.get_channel(channel_id)
	# 	await channel.send(f'–ü—Ä–æ—â–∞–π, {member.mention}!')

def setup(client):
	client.add_cog(Events(client))
